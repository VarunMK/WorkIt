{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["getColor","isOn","App","beginingTime","pomorado","minu","secs","shortbreak","longbreak","count","state","time","timer","setInterval","type","value","handleSubmit","event","preventDefault","resetButton","getStartTime","startButton","setState","clearInterval","alert","updateInput","target","stopButton","getHeading","className","id","href","onSubmit","this","for","min","style","height","placeholder","onChange","textAlign","fontSize","backgroundColor","borderColor","margin","width","onClick","background","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8d81c9e1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"antd\";\nimport { Divider } from \"antd\";\nimport \"C:/Users/varunmk/my-app/src/work.css\";\n\nconst getColor = (isOn) => {\n  return isOn ? \"#db2828\" : \"#21ba45\";\n};\n\nconst getText = (isOn) => {\n  return isOn ? \"Stop\" : \"Start\";\n};\n\nclass App extends React.Component {\n  beginingTime = {\n    pomorado: {\n      minu: \"25\",\n      secs: \"00\",\n    },\n\n    shortbreak: {\n      minu: \"5\",\n      secs: \"00\",\n    },\n\n    longbreak: {\n      minu: \"15\",\n      secs: \"00\",\n    },\n    count: 0,\n  };\n  state = {\n    isOn: false,\n    time: {\n      minu: this.beginingTime.pomorado.minu,\n      secs: this.beginingTime.pomorado.secs,\n    },\n    timer: setInterval(this.timer, 1000),\n    type: \"Workout\",\n    value: \"\",\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.beginingTime.pomorado.minu = this.state.value * 2;\n    this.state.time.minu = this.beginingTime.pomorado.minu;\n    this.state.time.secs = this.beginingTime.pomorado.secs;\n    this.resetButton();\n  };\n  getStartTime = (type) => {\n    if (type === \"Workout\") {\n      return {\n        minu: this.beginingTime.pomorado.minu,\n        secs: this.beginingTime.pomorado.secs,\n      };\n    }\n  };\n  startButton = () => {\n    if (this.state.isOn) {\n      this.setState({ isOn: false });\n      clearInterval(this.state.timer);\n    } else {\n      this.setState({\n        isOn: true,\n      });\n      this.setState({ timer: setInterval(this.timer, 1000) });\n    }\n  };\n  timer = () => {\n    const time = this.state.time;\n    const minu = time.minu;\n    const secs = time.secs;\n    if (this.state.isOn) {\n      if (minu == 0 && secs == 0) {\n        alert(`${this.state.type} Done!`);\n        this.resetButton(this.state.type);\n      } else if (secs == 0) {\n        this.setState({\n          time: {\n            minu: minu - 1,\n            secs: 59,\n          },\n        });\n      } else {\n        this.setState({\n          time: {\n            minu: minu,\n            secs: secs - 1,\n          },\n        });\n      }\n    } else {\n      clearInterval(this);\n    }\n  };\n  updateInput = (event) => {\n    this.setState({ value: event.target.value });\n  };\n  stopButton = () => {\n    if (this.state.isOn) {\n      this.setState({ isOn: false });\n      clearInterval(this.state.timer);\n    } else {\n      this.setState({ isOn: true });\n      this.setInterval({ timer: setInterval(this.timer, 1000) });\n    }\n  };\n  resetButton = () => {\n    this.setState({ isOn: false, time: this.getStartTime(this.state.type) });\n    clearInterval(this.state.timer);\n  };\n  getHeading = () => {\n    if (this.state.isOn) {\n      return <div>{this.state.type} in progress...</div>;\n    } else if (this.state.time.minu === this.beginingTime.pomorado.minu)\n      return <div>Start {this.state.type}</div>;\n    else if (this.state.time.minu === this.beginingTime.shortbreak.minu)\n      return <div>Start {this.state.type}</div>;\n    else if (this.state.time.minu === this.beginingTime.longbreak.minu)\n      return <div>Start {this.state.type}</div>;\n    else return <div>Continue {this.state.type}</div>;\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"show\">\n          <header>\n            <nav className=\"ok\">\n              <ul className=\"ok\">\n                <li className=\"hide\">\n                  <a href=\"index.html\">\n                    <strong>WorkIt</strong>\n                  </a>\n                </li>\n                <li>\n                  <a href=\"settings.html\">\n                    <strong>Settings</strong>\n                  </a>\n                </li>\n              </ul>\n            </nav>\n          </header>\n          <div className=\"main\">\n            <br />\n            <br />\n            <h1>WorkIt</h1>\n            <h2>Your Workout Timer</h2>\n            <p className=\"para\">\n              A workout timer based on your needs.\n              <br /> Different settings and customization\n              <br /> for the best possible experience.\n            </p>\n          </div>\n        </div>\n        <div id=\"color2\"></div>\n        <section id=\"timer\">\n          <div className=\"container\">\n            <h1 className=\"sec-head\">Timer</h1>\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"form-group\">\n                <label for=\"InputRounds\">Number Of Rounds</label>\n                <br />\n                <br />\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  className=\"form-check-input\"\n                  style={{ height: \"35px\" }}\n                  id=\"InputRounds\"\n                  placeholder=\"Enter Rounds\"\n                  onChange={this.updateInput}\n                />\n              </div>\n              <br />\n              {/* <div className=\"col-sm-10\">\n                <div className=\"form-check\">\n                  <input\n                    type=\"radio\"\n                    className=\"form-check\"\n                    id=\"Easy\"\n                    name=\"choice\"\n                  />\n                  <label className=\"form-check-input\" for=\"Easy\">\n                    Easy\n                  </label>\n                </div>\n                <div className=\"form-check\">\n                  <input\n                    type=\"radio\"\n                    className=\"form-check\"\n                    id=\"Med\"\n                    name=\"choice\"\n                  />\n                  <label className=\"form-check-input\" for=\"Med\">\n                    Medium\n                  </label>\n                </div>\n                <div className=\"form-check\">\n                  <input\n                    type=\"radio\"\n                    className=\"form-check\"\n                    id=\"Hard\"\n                    name=\"choice\"\n                  />\n                  <label className=\"form-check-input\" for=\"Hard\">\n                    Hard\n                  </label>\n                </div>\n              </div> */}\n              <br />\n              <button type=\"submit\">Submit</button>\n            </form>\n          </div>\n          <br />\n        </section>\n        <div style={{ textAlign: \"center\" }}>\n          <Divider />\n          <h1 style={{ fontSize: \"45px\" }}>{this.getHeading()}</h1>\n          <h1 style={{ fontSize: \"90px\" }}>\n            {this.state.time.minu + \":\" + this.state.time.secs}\n          </h1>\n          <div>\n            <Button\n              type=\"primary\"\n              style={{\n                backgroundColor: `${getColor(this.state.isOn)}`,\n                borderColor: `${getColor(this.state.isOn)}`,\n                margin: \"0 10px\",\n                width: \"200px\",\n                height: \"40px\",\n                fontSize: \"18px\",\n              }}\n              onClick={this.startButton}\n            >\n              {getText(this.state.isOn)}\n            </Button>\n            <Button\n              type=\"primary\"\n              style={{\n                background: \"#595959\",\n                borderColor: \"#595959\",\n                margin: \"0 10px\",\n                width: \"200px\",\n                height: \"40px\",\n                fontSize: \"18px\",\n              }}\n              onClick={this.resetButton}\n            >\n              Reset\n            </Button>\n          </div>\n        </div>\n        <br />\n        <br />\n        <footer>\n          <div className=\"footer-bottom text-center\">\n            Copyright © 2020 WorkIt By Zotako Corp\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { Provider } from \"react-redux\";\n// import { createStore, applyMiddleware, compose } from \"redux\";\nimport App from \"C:/Users/varunmk/my-app/src/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// const store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}